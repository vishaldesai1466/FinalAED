/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DonorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MainCenterEnterprise;
import Business.Network.Network;
import Business.Organization.DonorOrganization;
import Business.Organization.MainOffice;
import Business.Organization.Organization;
import Business.Organization.Store;
import Business.Organization.StoreChain;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MainOfficeWorkRequest;
import Business.WorkQueue.StoreWorkRequest;
import javax.swing.JPanel;


public class DonorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DonorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    
    /**
     * Creates new form DonorWorkAreaJPanel
     */
    public DonorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DonorOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business= business;
        populateStore();
        if(userAccount.getDonor().getType().equalsIgnoreCase("Individual"))
        {
               locationTxt.setEnabled(false);
        }
        if(!userAccount.getDonor().getType().equalsIgnoreCase("Individual"))
        {
               storeComboBox.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        donateBtn = new javax.swing.JButton();
        locationTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        quantityTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        storeComboBox = new javax.swing.JComboBox();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Wish to donate food? Just notify us!");

        donateBtn.setText("Donate");
        donateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donateBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel3.setText("(This facility is not available for individuals)");

        jLabel4.setText("Location:");

        jLabel5.setText("Store:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel6.setText("(This facility is only available for individuals)");

        storeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel4))
                                            .addGap(46, 46, 46)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(storeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(donateBtn)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(storeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(donateBtn)
                .addGap(51, 51, 51))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void donateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donateBtnActionPerformed
        
        if(!userAccount.getDonor().getType().equalsIgnoreCase("Individual"))
        {
        MainOfficeWorkRequest request=new MainOfficeWorkRequest();
        request.setSender(userAccount);
        request.setQuantity(Integer.valueOf(quantityTxt.getText()));
        request.setLocation(locationTxt.getText());
        request.setStatus("Sent");
        
        for(Network network : business.getNetworkList()){
            System.out.println("Network"+ network.getName());
           Enterprise en=null;
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            //    System.out.println("Enterprise"+ enterprise.getName());
                 if(enterprise instanceof MainCenterEnterprise){
                  //   System.out.println("Yes");
                    en = enterprise;
                    Organization org = null;
                    for (Organization organization : en.getOrganizationDirectory().getOrganizationList()){
                        
                        if (organization instanceof MainOffice){
                   //         System.out.println("Yes Organization");
                            org = organization;
                            break;
                        }
                    }
                    if (org!=null){
                   //     System.out.println("Org"+org.getName());
                   //     System.out.println("User Account"+userAccount.getUsername());
                        org.getWorkQueue().getWorkRequestList().add(request);
                   //     System.out.println("Orga"+org.getWorkQueue().getWorkRequestList());
                        userAccount.getWorkQueue().getWorkRequestList().add(request);
                    }
                    
                }
            }   
        }
        }
        else{
            //send work request to that particular store
             StoreWorkRequest request=new StoreWorkRequest();
             request.setSender(userAccount);
             request.setQuantity(Integer.parseInt(quantityTxt.getText()));
             request.setStatus("Dropped at Stall");
             Store inStore=null;
             for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList())
             {
                if(org instanceof StoreChain)
               {
                  for(Store store: ((StoreChain) org).getStoreChain())
                  {
                    Store selectedstore=(Store)storeComboBox.getSelectedItem();
                    if(store.getName().equals(selectedstore.getName()))
                    {
                      inStore=store;
                      break;
                    }   
                    
                  }    
               } 
             
             }
             if(inStore!=null)
             {
               inStore.getWorkQueue().getWorkRequestList().add(request);
                   //     System.out.println("Orga"+org.getWorkQueue().getWorkRequestList());
               userAccount.getWorkQueue().getWorkRequestList().add(request);
             }
        }
    }//GEN-LAST:event_donateBtnActionPerformed

    private void storeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeComboBoxActionPerformed
        
    }//GEN-LAST:event_storeComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton donateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField locationTxt;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JComboBox storeComboBox;
    // End of variables declaration//GEN-END:variables

    private void populateStore() {
       
        storeComboBox.removeAll();
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof StoreChain)
            {
               for(Store store: ((StoreChain) org).getStoreChain())
               {
                    storeComboBox.addItem(store);
                    
               }    
            }
        }
    }
}
